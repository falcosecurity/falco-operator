apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: falco-operator
    app.kubernetes.io/name: falco-operator
    app.kubernetes.io/managed-by: kustomize
  name: falco-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: falco-operator
  namespace: falco-operator
  labels:
    control-plane: falco-operator
    app.kubernetes.io/name: falco-operator
spec:
  selector:
    matchLabels:
      control-plane: falco-operator
      app.kubernetes.io/name: falco-operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: falco-operator
        app.kubernetes.io/name: falco-operator
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /usr/bin/manager
        args:
          - --health-probe-bind-address=:8081
        image: falcosecurity/falco-operator:latest
        imagePullPolicy: IfNotPresent
        name: falco-operator
        ports: []
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        volumeMounts: []
      volumes: []
      serviceAccountName: falco-operator
      terminationGracePeriodSeconds: 10
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: falco-operator-role
  labels:
    app.kubernetes.io/name: falco-operator
    app.kubernetes.io/managed-by: kustomize
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
  - apiGroups:
      - instance.falcosecurity.dev
      - artifact.falcosecurity.dev
    resources:
      - falcos
      - falcos/status
      - rulesfiles
      - rulesfiles/status
      - configs
      - configs/status
      - plugins
      - plugins/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - configmaps
      - secrets
      - serviceaccounts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
      - rolebindings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: falco-operator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: falco-operator-role
subjects:
  - kind: ServiceAccount
    name: falco-operator
    namespace: falco-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falco-operator
  namespace: falco-operator
  labels:
    app.kubernetes.io/name: falco-operator
